name: 🐍 Pylint + 🤖 Auto Approve PR

on:
  pull_request:

jobs:
  pylint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    outputs:
      lint_passed: ${{ steps.lint-status.outputs.lint_passed }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: 🔍 Get changed Python files
        id: changed-files
        run: |
          files=$(git diff --name-only origin/${{ github.base_ref }}...${{ github.head_ref }} | grep '\.py$' || true)
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$files" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 📝 Check if Python files changed
        id: has-py
        run: |
          if [ -z "${{ steps.changed-files.outputs.files }}" ]; then
            echo "no_py_files=true" >> $GITHUB_OUTPUT
          else
            echo "no_py_files=false" >> $GITHUB_OUTPUT
          fi

      - name: ✅ No Python files to lint, passing check! 🎉
        if: steps.has-py.outputs.no_py_files == 'true'
        run: echo "✨ No Python files changed in this PR. All clear! ✨"

      - name: ⬆️ Install dependencies
        if: steps.has-py.outputs.no_py_files == 'false'
        run: |
          python -m pip install --upgrade pip
          pip install pylint reviewdog

      - name: 🚦 Run Pylint and comment on PR with reviewdog
        if: steps.has-py.outputs.no_py_files == 'false'
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔎 Running Pylint on changed files: ${{ steps.changed-files.outputs.files }}"
          pylint ${{ steps.changed-files.outputs.files }} --output-format=parseable > pylint.log || true
          if [ -s pylint.log ]; then
            echo "❌ Lint issues found! See comments on PR. 😿"
            cat pylint.log
          else
            echo "✅ No lint issues found! 🥳"
          fi
          cat pylint.log | reviewdog -efm="%f:%l: [%t] %m" -name="🐍 Pylint Linter" -reporter=github-pr-review -filter-mode=added -fail-on-error=false

      - name: 🏁 Set Lint Status Output
        id: lint-status
        if: always()
        run: |
          if [ "${{ steps.has-py.outputs.no_py_files }}" == "true" ] || [ ! -s pylint.log ]; then
            echo "lint_passed=true" >> $GITHUB_OUTPUT
          else
            echo "lint_passed=false" >> $GITHUB_OUTPUT
          fi

      - name: 🤖 Trigger Gemini AI Review if Lint Fails
        if: steps.lint-status.outputs.lint_passed == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Pylint failed, triggering Gemini AI review by commenting on PR..."
          gh pr comment ${{ github.event.pull_request.number }} --body "/gemini-review"

  auto-approve:
    runs-on: ubuntu-latest
    needs: pylint
    if: needs.pylint.outputs.lint_passed == 'true'
    permissions:
      pull-requests: write
    steps:
      - name: 🤖 Auto-approve any PR
        uses: hmarr/auto-approve-action@v4
