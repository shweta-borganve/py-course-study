name: üêç Python Lint + ü§ñ Auto-Approve PR

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  lint-and-approve:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
      fail-fast: false

    steps:
      # Step 1: Checkout PR branch
      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          persist-credentials: false

      # Step 2: Setup Python
      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Detect changed Python files using paths-filter
      - name: üîç Detect changed Python files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            python:
              - '**/*.py'

      # Step 4: Skip lint if no Python files changed
      - name: ‚úÖ No Python files changed
        if: steps.filter.outputs.python == 'false'
        run: echo "‚ú® No Python files changed in this PR. Skipping lint."

      # Step 5: Install dependencies and run Pylint
      - name: üêç Install dependencies
        if: steps.filter.outputs.python == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install pylint reviewdog

      - name: üö¶ Run Pylint
        id: run-pylint
        run: |
          files=$(git diff --name-only origin/${{ github.base_ref }}...${{ github.head_ref }} | grep '\.py$' || true)
          if [ -z "$files" ]; then
            echo "No Python files to lint."
            exit 0
          fi
          echo "üîé Running Pylint on changed files: $files"
          pylint $files --output-format=parseable > pylint.log 2>&1 || true
      
          if [ -s pylint.log ]; then
            echo "‚ùå Lint issues found!"
            cat pylint.log
          else
            echo "‚úÖ No lint issues found!"
          fi

      # Step 6: Upload Pylint log as artifact
      - name: üì§ Upload Pylint log
        if: steps.filter.outputs.python == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: pylint-log
          path: pylint.log

      # Step 7: Auto-approve PR if lint passes
      - name: ü§ñ Auto-approve PR if lint passed
        if: steps.filter.outputs.python == 'true' && success()
        run: |
          # Check if pylint.log contains errors
          if [ -s pylint.log ]; then
            echo "‚ùå Lint errors detected. Skipping auto-approve."
            exit 1
          else
            echo "‚úÖ No lint issues. Auto-approving PR..."
            gh pr review ${{ github.event.pull_request.number }} --approve --body "Auto-approved"
        env:
          GITHUB_TOKEN: ${{ secrets.INFOYOUTH_PAT }}
